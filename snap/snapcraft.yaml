name: tide-ide
version: git
grade: stable
confinement: strict
base: core22
summary: A modern approach to WebAssembly development
description: TBD

architectures:
  - build-on: [amd64]
    build-for: [amd64]
  - build-on: [arm64]
    build-for: [arm64]

apps:
  tide-ide:
    environment:
      LD_LIBRARY_PATH: ${SNAP}/lib:${SNAP}/usr/lib:${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}
      QT_PLUGIN_PATH: ${SNAP}/usr/plugins
      QML_IMPORT_PATH: ${SNAP}/usr/qml
    command-chain:
      - bin/graphics-core22-wrapper
    command: usr/bin/tide-ide
    plugs: [ x11, wayland, desktop, desktop-legacy, opengl, alsa, pulseaudio, home, removable-media, network, network-bind ]

plugs:
  graphics-core22:
    interface: content
    target: $SNAP/graphics
    default-provider: mesa-core22

layout:
  /usr/share/libdrm:
    bind: $SNAP/graphics/libdrm
  /usr/share/drirc.d:
    symlink: $SNAP/graphics/drirc.d
  /usr/share/X11/XErrorDB:
    symlink: $SNAP/graphics/X11/XErrorDB
  /usr/share/X11/locale:
    symlink: $SNAP/graphics/X11/locale

parts:
  tide:
    plugin: cmake
    source: .
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
    build-packages:
      - cmake
      - ninja-build
      - build-essential
      - dpkg-dev
      - libssl-dev
      - libcrypt-dev
      - curl
      - clang
    override-build: |
      cd $SNAPCRAFT_PART_SRC
      bash -x bootstrap.sh --linux
      snapcraftctl build
    after: [ qt6declarative ]
  graphics-core22:
    source: https://github.com/MirServer/graphics-core22.git
    plugin: dump
    # Avoid polluting the "tide" part with deps since it causes massive rebuilds
    stage-packages: 
      - libpcre2-16-0
    override-prime: |
      craftctl default
      ${CRAFT_PART_SRC}/bin/graphics-core22-cleanup mesa-core22 nvidia-core22
    prime:
    - bin/graphics-core22-wrapper
    after: [ tide ]
  qt6:
    plugin: cmake
    source: https://github.com/qt/qtbase.git
    source-branch: 6.6.0
    cmake-parameters:
      - -GNinja
      - -DCMAKE_INSTALL_PREFIX=/usr
    build-packages:
      - cmake
      - ninja-build
      - build-essential
      - dpkg-dev
      - libinput-dev
      - libgl-dev
      - libgles-dev
      - libwayland-dev
      - libfontconfig1-dev
      - libfreetype6-dev
      - libx11-dev
      - libx11-xcb-dev
      - libxext-dev
      - libxfixes-dev
      - libxi-dev
      - libxrender-dev
      - libxcb1-dev
      - libxcb-cursor-dev
      - libxcb-glx0-dev
      - libxcb-keysyms1-dev
      - libxcb-image0-dev
      - libxcb-shm0-dev
      - libxcb-icccm4-dev
      - libxcb-sync-dev
      - libxcb-xfixes0-dev
      - libxcb-shape0-dev
      - libxcb-randr0-dev
      - libxcb-render-util0-dev
      - libxcb-util-dev
      - libxcb-xinerama0-dev
      - libxcb-xkb-dev
      - libxkbcommon-dev
      - libxkbcommon-x11-dev
    stage-packages:
      - libxkbcommon0
      - dmz-cursor-theme
      - light-themes
      - adwaita-icon-theme
      - gnome-themes-standard
      - shared-mime-info
      - libgdk-pixbuf2.0-0
    stage:
      - usr/*
  qt6shadertools:
    plugin: cmake
    source: https://github.com/qt/qtshadertools.git
    source-branch: 6.6.0
    override-build: |
      mkdir $SNAPCRAFT_PART_BUILD || true
      cd $SNAPCRAFT_PART_BUILD
      cmake -GNinja -DCMAKE_INSTALL_PREFIX=/usr $SNAPCRAFT_PART_SRC
      export LD_LIBRARY_PATH=${SNAPCRAFT_STAGE}/usr/lib
      ninja
      DESTDIR=$SNAPCRAFT_PART_INSTALL ninja install
    override-stage: |
      cd $SNAPCRAFT_PART_BUILD
      DESTDIR=$SNAPCRAFT_STAGE ninja install
    build-packages:
      - cmake
      - ninja-build
      - build-essential
      - dpkg-dev
    stage:
      - usr/*
    after: [ qt6 ]
  qt6declarative:
    plugin: cmake
    source: https://github.com/qt/qtdeclarative.git
    source-branch: 6.6.0
    override-build: |
      mkdir $SNAPCRAFT_PART_BUILD || true
      cd $SNAPCRAFT_PART_BUILD
      cmake -GNinja -DCMAKE_INSTALL_PREFIX=/usr $SNAPCRAFT_PART_SRC
      export LD_LIBRARY_PATH=${SNAPCRAFT_STAGE}/usr/lib
      ninja
      DESTDIR=$SNAPCRAFT_PART_INSTALL ninja install
    override-stage: |
      cd $SNAPCRAFT_PART_BUILD
      DESTDIR=$SNAPCRAFT_STAGE ninja install
    build-packages:
      - cmake
      - ninja-build
      - build-essential
      - dpkg-dev
    stage:
      - usr/*
    after: [ qt6shadertools ]
